h1. Assumptions & Requirements

* EC2 command line API
* AWS Keys 

h1. Set up EC2 API tools

Create the following file, ~/.ec2/config, and source it in your local profile. This will set up your local machine so you can connect to your AWS account through the Amazon API tools. Create the files ~/.ec2/pk.pem and ~/.ec2/cert.pem, with your private key and certificate, respectively.

{code:title=~/.ec2/config}
AWS_ACCOUNT_ID='your_account_id'
KEY_FILE_NAME="$HOME/.ec2/pk.pem"
CERT_FILE_NAME="$HOME/.ec2/cert.pem"
AWS_ACCESS_KEY_ID='your_access_key_id'
AWS_SECRET_ACCESS_KEY='your_secret_access_key_id'
AMAZON_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
AMAZON_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
BUCKET_BASE_NAME=

export AWS_ACCOUNT_ID KEY_FILE_NAME CERT_FILE_NAME AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY BUCKET_BASE_NAME AMAZON_ACCESS_KEY_ID AMAZON_SECRET_ACCESS_KEY

export EC2_HOME="$HOME/ec2-api"
export EC2_PRIVATE_KEY="$KEY_FILE_NAME"
export EC2_CERT="$CERT_FILE_NAME"
export PATH="$PATH:$EC2_HOME/bin:$HOME/ec2-ami:$HOME/apps/s3sync"
export S3CONF="$HOME/.ec2"
{code}

{note:Sensitive Data!}
It should go without saying that this data should not reside on any system in EC2!
{note}

h1. EC2 Information

* Security Group: rails_infra
* Allowed group: rails_infra
* Allowed ports: 22, 80, 443, 444
* Modified Alestic Ubuntu 9.04 AMI: ami-15dc3a7c

h1. Set up the Security Group

{code:title=Create a new group}
ec2-add-group rails_infra -d "Rails Application Infrastructure Stack"
{code}

{code:title=Add allowed ports}
ec2-authorize rails_infra -o rails_infra -u $AWS_ACCOUNT_ID 
ec2-authorize rails_infra -p 22 # ssh
ec2-authorize rails_infra -p 80 # http
ec2-authorize rails_infra -p 443 # https
ec2-authorize rails_infra -p 444 # https for chefadmin
{code}

h1. Starting the AMI

{code:title=Start the instance from the AMI}
ec2-add-keypair rails_infra > ~/.ssh/rails_infra
chmod 600 ~/.ssh/rails_infra
ec2-run-instances ami-bf5eb9d6 -g rails_infra -t m1.small -k rails_infra
{code}

This will take a couple minutes, check status with 'ec2din'. Note the instance ID, external and internal FQDNs, we'll need these for configuring the operations master node. 

For example,
* Instance ID: i-5525663c
* External FQDN: ec2-174-129-153-203.compute-1.amazonaws.com
* Internal FQDN: domU-12-31-39-02-F1-51.compute-1.internal

h1. Log Into Instance

Once the instance is up, you can log into it as root.

{code:title=Log into the new instance}
ssh -i ~/.ssh/rails_infra root@ec2-174-129-153-203.compute-1.amazonaws.com
{code}

Next, the [Set Up Rails Infrastructure Repository] instructions.